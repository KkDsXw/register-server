spring.application.name=register-service
server.port=17001
##加密
security.user.name=admin
security.user.password=123456
security.basic.enabled=true
management.security.enabled=false
management.security.roles=admin
endpoints.info.enabled=true
endpoints.info.sensitive=false
endpoints.health.enabled=true
endpoints.health.sensitive=false
endpoints.shutdown.enabled=true
##指定shutdown endpoint的路径
endpoints.shutdown.path=/home/kk/shutdown
endpoints.shutdown.sensitive=false
endpoints.restart.enabled=true
endpoints.restart.sensitive=false
eureka.client.healthcheck.enabled=true

##注册中心配置
#  eureka server 启动时会创建一个定时任务，每隔一段时间(默认60s)将当前清单中超时(默认90s)没有续约的服务剔除出去
#  自我保护 ：
#  在信息面板中可能会出现这样的红色警告 EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY'RE NOT. RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE.
#  该警告就是触发了eureka的自我保护机制，服务注册到eureka server后会维护一个心跳连接.eureka server在运行期间，会统计心跳失败的比例在15分钟内是否低于85%.
#  如果低于,会将当前的实例注册信息保护起来,让这些实例不会过期.可以配置 eureka.server.enable-self-preservation=false 来关闭保护机制
#  关闭保护机制，信息面板中会显示 THE SELF PRESERVATION MODE IS TURNED OFF.THIS MAY NOT PROTECT INSTANCE EXPIRY IN CASE OF NETWORK/OTHER PROBLEMS.
eureka.environment=dev
eureka.server.enableSelfPreservation=false
eureka.instance.hostname=eureka01
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=false
eureka.client.register-with-eureka=false
eureka.client.serviceUrl.defaultZone=http://admin:123456@localhost:17001/eureka/